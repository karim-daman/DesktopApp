name: Increment Version and Release

on:
  workflow_dispatch:
    inputs:
      increment:
        description: "Increment type (patch, minor, major)"
        required: true
        default: "patch"
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  create-gist:
    runs-on: ubuntu-latest
    steps:
      - name: Create gist content
        id: create-content
        run: |
          CONTENT=$(cat << EOF
          {
            "version": "v${{ needs.increment-version-and-release.outputs.new_version }}",
            "notes": "New release",
            "pub_date": "$(date -u +'%Y-%m-%dT%H:%M:%SZ')",
            "platforms": {
              "darwin-x86_64": {
                "signature": "Signature for macOS x86_64",
                "url": "https://github.com/${{ github.repository }}/releases/download/v${{ needs.increment-version-and-release.outputs.new_version }}/app-x86_64.app.tar.gz"
              },
              "darwin-aarch64": {
                "signature": "Signature for macOS aarch64",
                "url": "https://github.com/${{ github.repository }}/releases/download/v${{ needs.increment-version-and-release.outputs.new_version }}/app-aarch64.app.tar.gz"
              },
              "linux-x86_64": {
                "signature": "Signature for Linux x86_64",
                "url": "https://github.com/${{ github.repository }}/releases/download/v${{ needs.increment-version-and-release.outputs.new_version }}/app-amd64.AppImage.tar.gz"
              },
              "windows-x86_64": {
                "signature": "Signature for Windows x86_64",
                "url": "https://github.com/${{ github.repository }}/releases/download/v${{ needs.increment-version-and-release.outputs.new_version }}/app-x64-setup.nsis.zip"
              }
            }
          }
          EOF
          )
          echo "content<<EOF" >> $GITHUB_OUTPUT
          echo "$CONTENT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create new gist
        id: create-gist
        uses: actions/github-script@v6
        env:
          GIST_FILENAME: version.json
        with:
          github-token: ${{ secrets.PAT }}
          script: |
            const content = `${{ steps.create-content.outputs.content }}`;
            try {
              console.log('Creating new gist');
              const response = await github.rest.gists.create({
                files: {
                  [process.env.GIST_FILENAME]: {
                    content: content
                  }
                },
                public: true
              });
              const gistId = response.data.id;
              const gistUrl = `https://gist.github.com/${context.repo.owner}/${gistId}`;
              console.log(`Gist URL: ${gistUrl}`);
              core.setOutput('gist-url', gistUrl);
              core.setOutput('gist-id', gistId);
            } catch (error) {
              console.log(`Error: ${error.message}`);
              core.setFailed(`Failed to create gist: ${error.message}`);
            }

      - name: Output Gist Information
        run: |
          echo "The gist can be found at ${{ steps.create-gist.outputs.gist-url }}"
          echo "Gist ID: ${{ steps.create-gist.outputs.gist-id }}"
